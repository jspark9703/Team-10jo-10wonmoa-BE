openapi: 3.0.1
info:
  title: Tenwonmoa API
  description: Tenwonmoa API description
  version: 1.0.0
servers:
- url: http://3.39.184.232:8080
tags: []
paths:
  /api/v1/budgets:
    get:
      tags:
      - api
      operationId: budget-findBy-registerDate
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-budgets-1714066444'
              examples:
                budget-findBy-registerDate:
                  value: "{\"budgets\":[{\"id\":1,\"categoryName\":\"교통/차량\",\"amount\"\
                    :1000},{\"id\":2,\"categoryName\":\"문화생활\",\"amount\":2000},{\"\
                    id\":3,\"categoryName\":\"마트/편의점\",\"amount\":3000}]}"
    put:
      tags:
      - api
      operationId: budget-create
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-budgets1364090725'
            examples:
              budget-create:
                value: "{\"amount\":1000,\"registerDate\":\"2022-08\",\"userCategoryId\"\
                  :1}"
      responses:
        "204":
          description: "204"
  /api/v1/expenditures:
    post:
      tags:
      - api
      operationId: expenditure-
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-expenditures486549215'
            examples:
              expenditure-create-forbidden:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":1000,\"\
                  content\":\"식비\",\"userCategoryId\":2}"
              expenditure-post-amount-max-error:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":1000000000001,\"\
                  content\":\"식비\",\"userCategoryId\":2}"
              expenditure-post-register-date-null:
                value: "{\"registerDate\":null,\"amount\":1000,\"content\":\"식비\"\
                  ,\"userCategoryId\":2}"
              expenditure-post-amount-null:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":null,\"\
                  content\":\"식비\",\"userCategoryId\":2}"
              expenditure-post-user-category-id-null:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":1000000000001,\"\
                  content\":\"식비\",\"userCategoryId\":null}"
              expenditure-post-content-max-error:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":1000,\"\
                  content\":\"이것은50글자를넘습니다.이것은50글자를넘습니다.이것은50글자를넘습니다.이것은50글자를넘습니다\
                  .\",\"userCategoryId\":2}"
              expenditure-post-amount-min-error:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":-1,\"\
                  content\":\"식비\",\"userCategoryId\":2}"
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-expenditures1023026241'
            examples:
              expenditure-create:
                value: "{\"registerDate\":\"2022-08-12T08:11:00\",\"amount\":1000,\"\
                  content\":\"식비\",\"userCategoryId\":2}"
      responses:
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                expenditure-create-forbidden:
                  value: "{\"messages\":[\"다른 사용자의 데이터에 접근할 수 없습니다.\"],\"status\"\
                    :403}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                expenditure-post-amount-max-error:
                  value: "{\"messages\":[\"최대값은 1조입니다\"],\"status\":400}"
                expenditure-post-register-date-null:
                  value: "{\"messages\":[\"등록일을 채워주세요\"],\"status\":400}"
                expenditure-post-amount-null:
                  value: "{\"messages\":[\"must not be null\"],\"status\":400}"
                expenditure-post-user-category-id-null:
                  value: "{\"messages\":[\"최대값은 1조입니다\",\"유저 카테고리 아이디를 채워주세요\"],\"\
                    status\":400}"
                expenditure-post-content-max-error:
                  value: "{\"messages\":[\"내용의 최대 길이는 50입니다\"],\"status\":400}"
                expenditure-post-amount-min-error:
                  value: "{\"messages\":[\"최소값은 0입니다\"],\"status\":400}"
        "201":
          description: "201"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures780147897'
              examples:
                expenditure-create:
                  value: "{\"id\":1}"
  /api/v1/statistics:
    get:
      tags:
      - api
      operationId: statistics-find-
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-statistics-1753393928'
              examples:
                statistics-find-month:
                  value: "{\"year\":2022,\"month\":10,\"incomeTotalSum\":60,\"expenditureTotalSum\"\
                    :132,\"incomes\":[{\"name\":\"용돈\",\"total\":30,\"percent\":50.0},{\"\
                    name\":\"상여\",\"total\":20,\"percent\":33.33},{\"name\":\"금융소득\
                    \",\"total\":10,\"percent\":16.67}],\"expenditures\":[{\"name\"\
                    :\"교통/차량\",\"total\":45,\"percent\":34.09},{\"name\":\"문화생활\"\
                    ,\"total\":44,\"percent\":33.33},{\"name\":\"마트/편의점\",\"total\"\
                    :43,\"percent\":32.58}]}"
                statistics-find-year:
                  value: "{\"year\":2022,\"month\":null,\"incomeTotalSum\":60,\"expenditureTotalSum\"\
                    :132,\"incomes\":[{\"name\":\"용돈\",\"total\":30,\"percent\":50.0},{\"\
                    name\":\"상여\",\"total\":20,\"percent\":33.33},{\"name\":\"금융소득\
                    \",\"total\":10,\"percent\":16.67}],\"expenditures\":[{\"name\"\
                    :\"교통/차량\",\"total\":45,\"percent\":34.09},{\"name\":\"문화생활\"\
                    ,\"total\":44,\"percent\":33.33},{\"name\":\"마트/편의점\",\"total\"\
                    :43,\"percent\":32.58}]}"
  /api/v1/users:
    get:
      tags:
      - api
      operationId: user-info
      parameters:
      - name: Authorization
        in: header
        description: Jwt token
        required: true
        schema:
          type: string
        example: Bearer jwt.token.here
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-users-272417006'
              examples:
                user-info:
                  value: "{\"email\":\"test@test.com\"}"
    post:
      tags:
      - api
      operationId: user-create
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-users-28069028'
            examples:
              user-create:
                value: "{\"email\":\"test@test.com\",\"username\":\"lee\",\"password\"\
                  :\"12345678\"}"
      responses:
        "201":
          description: "201"
  /api/v1/account-book/calendar:
    get:
      tags:
      - api
      operationId: accountbook-calendar-account
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-calendar-372360016'
              examples:
                accountbook-calendar-account:
                  value: "{\"results\":[{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-01\"},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"date\":\"2022-08-02\"\
                    },{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"date\":\"2022-08-03\"},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"date\":\"2022-08-04\"},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"date\":\"\
                    2022-08-05\"},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-06\"},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"date\":\"2022-08-07\"\
                    },{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"date\":\"2022-08-08\"},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"date\":\"2022-08-09\"},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"date\":\"\
                    2022-08-10\"},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-11\"},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"date\":\"2022-08-12\"\
                    },{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"date\":\"2022-08-13\"},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"date\":\"2022-08-14\"},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"date\":\"\
                    2022-08-15\"},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-16\"},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"date\":\"2022-08-17\"\
                    },{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"date\":\"2022-08-18\"},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"date\":\"2022-08-19\"},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"date\":\"\
                    2022-08-20\"},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-21\"},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"date\":\"2022-08-22\"\
                    },{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"date\":\"2022-08-23\"},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"date\":\"2022-08-24\"},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"date\":\"\
                    2022-08-25\"},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-26\"},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"date\":\"2022-08-27\"\
                    },{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"date\":\"2022-08-28\"},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"date\":\"2022-08-29\"},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"date\":\"\
                    2022-08-30\"},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"date\":\"2022-08-31\"}],\"month\":8}"
  /api/v1/account-book/daily:
    get:
      tags:
      - api
      operationId: accountbook-daily-account
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-daily-1395639693'
              examples:
                accountbook-daily-account:
                  value: "{\"results\":[{\"registerDate\":\"2022-08-29\",\"incomeSum\"\
                    :20000,\"expenditureSum\":10000,\"dayDetails\":[{\"id\":1,\"type\"\
                    :\"INCOME\",\"amount\":20000,\"content\":\"수입29\",\"categoryName\"\
                    :\"어디선가 벌었다\",\"registerTime\":\"2022-08-29T10:11:00\"},{\"id\"\
                    :2,\"type\":\"EXPENDITURE\",\"amount\":10000,\"content\":\"지출\
                    29\",\"categoryName\":\"어디선가 썼다\",\"registerTime\":\"2022-08-29T10:12:00\"\
                    }]},{\"registerDate\":\"2022-08-28\",\"incomeSum\":20000,\"expenditureSum\"\
                    :10000,\"dayDetails\":[{\"id\":3,\"type\":\"INCOME\",\"amount\"\
                    :20000,\"content\":\"수입29\",\"categoryName\":\"어디선가 벌었다\",\"registerTime\"\
                    :\"2022-08-28T10:11:00\"},{\"id\":4,\"type\":\"EXPENDITURE\",\"\
                    amount\":10000,\"content\":\"지출29\",\"categoryName\":\"어디선가 썼다\
                    \",\"registerTime\":\"2022-08-28T10:12:00\"}]}],\"currentPage\"\
                    :1,\"totalElements\":4,\"nextPage\":null,\"totalPages\":1}"
  /api/v1/account-book/search:
    get:
      tags:
      - api
      operationId: search-account-book
      parameters:
      - name: categories
        in: query
        description: 유저카테고리 아이디
        required: false
        schema:
          type: string
      - name: minprice
        in: query
        description: 최소 가격
        required: false
        schema:
          type: string
      - name: maxprice
        in: query
        description: 최대 가격
        required: false
        schema:
          type: string
      - name: start
        in: query
        description: 시작 등록일
        required: false
        schema:
          type: string
      - name: end
        in: query
        description: 종료 등록일
        required: false
        schema:
          type: string
      - name: content
        in: query
        description: "지출, 수입의 내용"
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 페이지의 사이즈
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-search-1957235720'
              examples:
                search-account-book:
                  value: |-
                    {
                      "results" : [ {
                        "id" : 1,
                        "type" : "EXPENDITURE",
                        "amount" : 10000,
                        "content" : "점심",
                        "categoryName" : "식비",
                        "registerTime" : "2022-08-14T22:45:28.207416"
                      }, {
                        "id" : 1,
                        "type" : "INCOME",
                        "amount" : 50000,
                        "content" : "용돈",
                        "categoryName" : "용돈",
                        "registerTime" : "2022-08-14T22:45:28.207477"
                      } ],
                      "currentPage" : 1,
                      "totalElements" : 10,
                      "nextPage" : 2,
                      "totalPages" : 10
                    }
  /api/v1/budgets/statistics:
    get:
      tags:
      - api
      operationId: budget_statistics-
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-budgets-statistics-1295744875'
              examples:
                budget_statistics-month:
                  value: "{\"registerDate\":\"2022-7\",\"amount\":600,\"expenditure\"\
                    :60,\"percent\":10,\"budgets\":[{\"userCategoryId\":1,\"categoryName\"\
                    :\"교통/차량\",\"amount\":100,\"expenditure\":10,\"percent\":10},{\"\
                    userCategoryId\":2,\"categoryName\":\"문화생활\",\"amount\":200,\"\
                    expenditure\":20,\"percent\":10},{\"userCategoryId\":3,\"categoryName\"\
                    :\"마트/편의점\",\"amount\":300,\"expenditure\":30,\"percent\":10}]}"
                budget_statistics-year:
                  value: "{\"registerDate\":\"2022-7\",\"amount\":600,\"expenditure\"\
                    :60,\"percent\":10,\"budgets\":[{\"userCategoryId\":1,\"categoryName\"\
                    :\"교통/차량\",\"amount\":100,\"expenditure\":10,\"percent\":10},{\"\
                    userCategoryId\":2,\"categoryName\":\"문화생활\",\"amount\":200,\"\
                    expenditure\":20,\"percent\":10},{\"userCategoryId\":3,\"categoryName\"\
                    :\"마트/편의점\",\"amount\":300,\"expenditure\":30,\"percent\":10}]}"
  /api/v1/expenditures/{expenditureId}:
    get:
      tags:
      - api
      operationId: expenditure-get
      parameters:
      - name: expenditureId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                expenditure-get-forbidden:
                  value: "{\"messages\":[\"해당 지출이 존재 하지 않습니다.\"],\"status\":404}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-expenditureId2033270015'
              examples:
                expenditure-get:
                  value: "{\"id\":1,\"registerDate\":\"2022-08-14T22:45:22.805991\"\
                    ,\"amount\":20000,\"content\":\"돈까스마시써\",\"userCategoryId\":3,\"\
                    categoryName\":\"식비\"}"
    put:
      tags:
      - api
      operationId: expenditure-update
      parameters:
      - name: expenditureId
        in: path
        description: ""
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-expenditures-expenditureId440992244'
            examples:
              expenditure-update:
                value: "{\"registerDate\":\"2022-08-14T22:45:22.463009\",\"amount\"\
                  :10000,\"content\":\"수정\",\"userCategoryId\":2}"
      responses:
        "204":
          description: "204"
    delete:
      tags:
      - api
      operationId: expenditure-delete
      parameters:
      - name: expenditureId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
  /api/v1/incomes/:
    post:
      tags:
      - api
      operationId: income-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-incomes-1988379506'
            examples:
              income-create:
                value: "{\"registerDate\":\"2022-08-14T22:45:25.767283\",\"amount\"\
                  :1000,\"content\":\"content\",\"userCategoryId\":1}"
              income-create-fail:
                value: "{\"registerDate\":\"2022-08-14T22:45:25.888186\",\"amount\"\
                  :1000,\"content\":\"content\",\"userCategoryId\":1}"
      responses:
        "201":
          description: "201"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-incomes--373420824'
              examples:
                income-create:
                  value: "{\"id\":1}"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                income-create-fail:
                  value: "{\"messages\":[\"해당 사용자 카테고리는 존재하지 않습니다.\"],\"status\":404}"
  /api/v1/incomes/{incomeId}:
    get:
      tags:
      - api
      operationId: income-f
      parameters:
      - name: incomeId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                income-find-by-id-fail:
                  value: "{\"messages\":[\"수입 정보가 존재하지 않습니다.\"],\"status\":404}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-incomes-incomeId-1674408626'
              examples:
                income-find-by-id:
                  value: "{\"id\":1,\"registerDate\":\"2022-08-14T22:45:25.938641\"\
                    ,\"amount\":1000,\"content\":\"content\",\"userCategoryId\":1,\"\
                    categoryName\":\"용돈\"}"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                income-forbidden:
                  value: "{\"messages\":[\"다른 사용자의 데이터에 접근할 수 없습니다.\"],\"status\"\
                    :403}"
    put:
      tags:
      - api
      operationId: income-update
      parameters:
      - name: incomeId
        in: path
        description: ""
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-incomes-1988379506'
            examples:
              income-update:
                value: "{\"registerDate\":\"2022-08-14T22:45:23.10866\",\"amount\"\
                  :2000,\"content\":\"updateContent\",\"userCategoryId\":2}"
              income-update-fail:
                value: "{\"registerDate\":\"2022-08-14T22:45:25.649155\",\"amount\"\
                  :2000,\"content\":\"updateContent\",\"userCategoryId\":2}"
      responses:
        "204":
          description: "204"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-expenditures-940438351'
              examples:
                income-update-fail:
                  value: "{\"messages\":[\"수입 정보가 존재하지 않습니다.\"],\"status\":404}"
    delete:
      tags:
      - api
      operationId: income-delete
      parameters:
      - name: incomeId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
  /api/v1/account-book/month/{year}:
    get:
      tags:
      - api
      operationId: accountbook-month-account
      parameters:
      - name: year
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-month-year2010980250'
              examples:
                accountbook-month-account:
                  value: "{\"results\":[{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"month\":1},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"month\":2},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"month\":3},{\"incomeSum\"\
                    :100000,\"expenditureSum\":50000,\"totalSum\":50000,\"month\"\
                    :4},{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000,\"month\":5},{\"incomeSum\":100000,\"expenditureSum\":50000,\"\
                    totalSum\":50000,\"month\":6},{\"incomeSum\":100000,\"expenditureSum\"\
                    :50000,\"totalSum\":50000,\"month\":7},{\"incomeSum\":100000,\"\
                    expenditureSum\":50000,\"totalSum\":50000,\"month\":8}]}"
  /api/v1/account-book/search/sum:
    get:
      tags:
      - api
      operationId: search-sum-account-book
      parameters:
      - name: categories
        in: query
        description: 유저카테고리 아이디
        required: false
        schema:
          type: string
      - name: minprice
        in: query
        description: 최소 가격
        required: false
        schema:
          type: string
      - name: maxprice
        in: query
        description: 최대 가격
        required: false
        schema:
          type: string
      - name: start
        in: query
        description: 시작 등록일
        required: false
        schema:
          type: string
      - name: end
        in: query
        description: 종료 등록일
        required: false
        schema:
          type: string
      - name: content
        in: query
        description: "지출, 수입의 내용"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-search-sum1751974973'
              examples:
                search-sum-account-book:
                  value: |-
                    {
                      "incomeSum" : 10000,
                      "expenditureSum" : 20000,
                      "totalSum" : -10000
                    }
  /api/v1/account-book/sum/month/{date}:
    get:
      tags:
      - api
      operationId: accountbook-month
      parameters:
      - name: date
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-sum-month-date698625968'
              examples:
                accountbook-month-sum:
                  value: "{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000}"
                accountbook-monthSum:
                  value: "{\"incomeSum\":100000,\"expenditureSum\":50000,\"totalSum\"\
                    :50000}"
  /api/v1/account-book/sum/year/{year}:
    get:
      tags:
      - api
      operationId: accountbook-year-sum
      parameters:
      - name: year
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-account-book-sum-month-date698625968'
              examples:
                accountbook-year-sum:
                  value: "{\"incomeSum\":20000000000,\"expenditureSum\":50000000,\"\
                    totalSum\":19950000000}"
components:
  schemas:
    api-v1-budgets-1714066444:
      type: object
      properties:
        budgets:
          type: array
          items:
            type: object
            properties:
              amount:
                type: number
                description: 예산 금액
              id:
                type: number
                description: 예산 ID
              categoryName:
                type: string
                description: 카테고리 이름
    api-v1-account-book-daily-1395639693:
      type: object
      properties:
        totalPages:
          type: number
          description: 페이지
        currentPage:
          type: number
          description: 현재 페이지
        results:
          type: array
          description: "일일 조회된 지출, 수입 데이터"
          items:
            type: object
            properties:
              incomeSum:
                type: number
                description: 수입 합계
              dayDetails:
                type: array
                description: 등록일에 대한 가계
                items:
                  type: object
                  properties:
                    amount:
                      type: number
                      description: 가계 금액
                    registerTime:
                      type: string
                      description: 가계 등록 시간
                    id:
                      type: number
                      description: 가계 Id
                    type:
                      type: string
                      description: "가계 종류(INCOME, EXPENDITURE)"
                    categoryName:
                      type: string
                      description: 가계 category 이름
                    content:
                      type: string
                      description: 가계 내용
              expenditureSum:
                type: number
                description: 지출 합계
              registerDate:
                type: string
                description: 등록일
        totalElements:
          type: number
          description: 전체 결과 개수
    api-v1-expenditures-940438351:
      type: object
      properties:
        messages:
          type: array
          description: 예외 메시지
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        status:
          type: number
          description: 에러 코드
    api-v1-statistics-1753393928:
      type: object
      properties:
        incomes:
          type: array
          items:
            type: object
            properties:
              total:
                type: number
                description: 총 합
              name:
                type: string
                description: 카테고리 이름
              percent:
                type: number
                description: 비율
        month:
          description: 월
          oneOf:
          - null
          - type: number
        year:
          type: number
          description: 년도
        expenditures:
          type: array
          items:
            type: object
            properties:
              total:
                type: number
                description: 총 합
              name:
                type: string
                description: 카테고리 이름
              percent:
                type: number
                description: 비율
        incomeTotalSum:
          type: number
          description: 수입 총 합계
        expenditureTotalSum:
          type: number
          description: 지출 총 합계
    api-v1-account-book-month-year2010980250:
      type: object
      properties:
        results:
          type: array
          description: 월별 상세내역 리스트
          items:
            type: object
            properties:
              totalSum:
                type: number
                description: 총 합계
              month:
                type: number
                description: 해당 월
              incomeSum:
                type: number
                description: 월별 수입 합계
              expenditureSum:
                type: number
                description: 월별 지출 합계
    api-v1-budgets1364090725:
      type: object
      properties:
        amount:
          type: number
          description: 예산 금액
        userCategoryId:
          type: number
          description: 유저 카테고리 ID
        registerDate:
          type: string
          description: 예산 등록 날짜
    api-v1-expenditures-expenditureId2033270015:
      type: object
      properties:
        amount:
          type: number
          description: 지출 금액
        userCategoryId:
          type: number
          description: 유저 카테고리 ID
        id:
          type: number
          description: 지출 ID
        categoryName:
          type: string
          description: 카테고리 이름
        content:
          type: string
          description: 내용
        registerDate:
          type: string
          description: 지출 등록 날짜
    api-v1-account-book-search-1957235720:
      type: object
      properties:
        nextPage:
          type: number
          description: 다음 페이지
        totalPages:
          type: number
          description: 페이지
        currentPage:
          type: number
          description: 현재 페이지
        results:
          type: array
          description: "검색된 지출, 수입 데이터"
          items:
            type: object
            properties:
              amount:
                type: number
                description: 금액
              registerTime:
                type: string
                description: 등록일
              id:
                type: number
                description: 지출 or 수입의 아이디
              type:
                type: string
                description: 지출 or 수입 종류
              categoryName:
                type: string
                description: 카테고리 이름
              content:
                type: string
                description: 내용
        totalElements:
          type: number
          description: 전체 결과 개수
    api-v1-users-28069028:
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        email:
          type: string
          description: 이메일
        username:
          type: string
          description: 사용자이름
    api-v1-account-book-search-sum1751974973:
      type: object
      properties:
        totalSum:
          type: number
          description: "지출, 수입의 총합"
        incomeSum:
          type: number
          description: 수입의 총합
        expenditureSum:
          type: number
          description: 지출의 총합
    api-v1-users-272417006:
      type: object
      properties:
        email:
          type: string
          description: 이메일
    api-v1-budgets-statistics-1295744875:
      type: object
      properties:
        expenditure:
          type: number
          description: 지출 총 금액
        amount:
          type: number
          description: 예산 총 금액
        budgets:
          type: array
          items:
            type: object
            properties:
              expenditure:
                type: number
                description: 지출 합계
              amount:
                type: number
                description: 예산 합계
              userCategoryId:
                type: number
                description: 유저 카테고리 ID
              percent:
                type: number
                description: 사용량
              categoryName:
                type: string
                description: 카테고리 이름
        percent:
          type: number
          description: 사용량
        registerDate:
          type: string
          description: 예산 등록일
    api-v1-account-book-sum-month-date698625968:
      type: object
      properties:
        totalSum:
          type: number
          description: 총 합계
        incomeSum:
          type: number
          description: 월별 수입 합계
        expenditureSum:
          type: number
          description: 월별 지출 합계
    api-v1-incomes-1988379506:
      type: object
      properties:
        amount:
          type: number
          description: 수입 금액
        userCategoryId:
          type: number
          description: 유저 카테고리 ID
        content:
          type: string
          description: 내용
        registerDate:
          type: string
          description: 수입 등록 날짜
    api-v1-incomes--373420824:
      type: object
      properties:
        id:
          type: number
          description: 생성된 수입 아이디
    api-v1-expenditures780147897:
      type: object
      properties:
        id:
          type: number
          description: 생성된 지출 아이디
    api-v1-expenditures1023026241:
      type: object
      properties:
        amount:
          type: number
          description: 금액
        userCategoryId:
          type: number
          description: 유저카테고리 아이디
        content:
          type: string
          description: 내용
        registerDate:
          type: string
          description: 지출 등록 날짜
    api-v1-incomes-incomeId-1674408626:
      type: object
      properties:
        amount:
          type: number
          description: 수입 금액
        userCategoryId:
          type: number
          description: 유저 카테고리 ID
        id:
          type: number
          description: 수입 ID
        categoryName:
          type: string
          description: 카테고리 이름
        content:
          type: string
          description: 내용
        registerDate:
          type: string
          description: 수입 등록 날짜
    api-v1-expenditures-expenditureId440992244:
      type: object
      properties:
        amount:
          type: number
          description: 금액
        userCategoryId:
          type: number
          description: 유저 카테고리 ID
        content:
          type: string
          description: 내용
        registerDate:
          type: string
          description: 등록 날짜
    api-v1-account-book-calendar-372360016:
      type: object
      properties:
        month:
          type: number
          description: 월
        results:
          type: array
          description: 달력 상세내역 리스트
          items:
            type: object
            properties:
              totalSum:
                type: number
                description: 총 합계
              date:
                type: string
                description: 해당 날짜
              incomeSum:
                type: number
                description: 월별 수입 합계
              expenditureSum:
                type: number
                description: 월별 지출 합계
    api-v1-expenditures486549215:
      type: object
